# Euler Problem 18
# maximum sum of paths
import numpy as np
numbs = [75,95,64,17,47,82,18,35,87,10,20,4,82,47,65,19,1,23,75,3,34,88,2,77,73,7,63,67,99,65,4,28,6,16,70,92,
    41,41,26,56,83,40,80,70,33,41,48,72,33,47,32,37,16,94,29,53,71,44,65,25,43,91,52,97,51,14,70,11,33,28,77,73,17,78,39,68,17,57,
    91,71,52,38,17,14,91,43,58,50,27,29,48,63,66,4,68,89,53,67,30,73,16,69,87,40,31,4,62,98,27,23,9,70,98,73,93,38,53,60,4,23]
data1 = np.zeros((15,15))
a = 0
b = 0
c = 0
z = 1
while b < 15:
    while a < b + z:
        data1[b, c] = data1[b, c] + numbs[a]
        a = a + 1
        c = c + 1
    b = b + 1
    z = z + b
    c = 0
print(data1)
m = 14
n = 14
while m > 0:
    while n > 0:
        data1[m-1, n-1] = data1[m-1, n-1] + max(data1[m, n-1], data1[m, n])
        n = n - 1
    m = m - 1
    n = 14
print(data1)
